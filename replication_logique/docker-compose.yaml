version: "3.8"

services:
  primary:
    container_name: postgres-primary
    build:
      context: .
      args:
        PATH_TO_SCRIPTS: ./source
    environment:
      POSTGRES_USER: postgresadmin
      POSTGRES_PASSWORD: BgqzYc4lM7OypUh
      PGDATA: /data/
      POSTGRES_DB: postgresdb
      REPLICATION_USER: replicationuser
      REPLICATION_USER_PASSWORD: BgqzYc4lM7OypUh
    volumes:
      - postgres_primary_volume:/data
      - ./source/config:/config
      - ./source/archive:/archive
    ports:
      - "5433:5432"
    networks:
      - logical-replication-network
    restart: unless-stopped
    command: postgres -c config_file=/config/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  standby-1:
    container_name: postgres-standby-1
    build:
      context: .
      args:
        PATH_TO_SCRIPTS: ./standby
        NODE_ID: -1
    environment:
      POSTGRES_USER: postgresadmin
      POSTGRES_PASSWORD: BgqzYc4lM7OypUh
      PGDATA: /data/
      POSTGRES_DB: postgresdb
      REPLICATION_USER: replicationuser
      REPLICATION_USER_PASSWORD: BgqzYc4lM7OypUh
      PRIMARY_HOSTNAME: postgres-primary
    volumes:
      - ./standby/config:/config
      - ./standby/archive:/mnt/server/archive
    ports:
      - "5434:5432"
    networks:
      - logical-replication-network
    restart: unless-stopped
    command: postgres -c config_file=/config/postgresql.conf
    depends_on:
      - primary
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  standby-2:
    container_name: postgres-standby-2
    build:
      context: .
      args:
        PATH_TO_SCRIPTS: ./standby
        NODE_ID: -2
    environment:
      POSTGRES_USER: postgresadmin
      POSTGRES_PASSWORD: BgqzYc4lM7OypUh
      PGDATA: /data/
      POSTGRES_DB: postgresdb
      REPLICATION_USER: replicationuser
      REPLICATION_USER_PASSWORD: BgqzYc4lM7OypUh
      PRIMARY_HOSTNAME: postgres-primary
    volumes:
      - ./standby/config:/config
      - ./standby/archive:/mnt/server/archive
    ports:
      - "5435:5432"
    networks:
      - logical-replication-network
    restart: unless-stopped
    command: postgres -c config_file=/config/postgresql.conf
    depends_on:
      - primary
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  logical-replication-network:

volumes:
  postgres_primary_volume:
    external: true
